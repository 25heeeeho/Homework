{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMtLsHO/NqHOXIWei48L8Mi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/25heeeeho/Homework/blob/main/Untitled185.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "hyse-D1K46kr",
        "outputId": "572177bf-7b4b-4af1-ddec-19f53cd9ee51"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "invalid syntax (ipython-input-3634466219.py, line 2)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"/tmp/ipython-input-3634466219.py\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    import numpy sa np\u001b[0m\n\u001b[0m                 ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ],
      "source": [
        "import cv2\n",
        "import numpy sa np\n",
        "from random import shuffle\n",
        "from math import sqrt\n",
        "\n",
        "B = [i for i in range(256)]\n",
        "G = [i for i in range(256)]\n",
        "R = [i for i in range(256)]\n",
        "\n",
        "mode = True\n",
        "is_drawing = False\n",
        "ix,iy = -1,-1"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def onMouse(event,x,y,flags,param):\n",
        "  global ix,iy,is_drawing,mode,B,G,R\n",
        "\n",
        "  if event == cv2.EVENT_LBUTTONDOWN:\n",
        "    is_drawing = True\n",
        "    ix,iy = x,y\n",
        "    shuffle(B),shuffle(G),shuffle(R)\n",
        "\n",
        "  elif event == cv2.EVENT_MOUSEMOVE:\n",
        "    if is_drawing:\n",
        "      if mode:\n",
        "        cv2.rectangle(param,(ix,iy),(x,y),(B[0],G[0],R[0]),-1)\n",
        "      else:\n",
        "        r = (ix-x)**2 + (iy-y)**2\n",
        "        r = int(sqrt(r))\n",
        "        cv2.circle(param,(ix,iy),r,(B[0],G[0],R[0]),-1)\n",
        "\n",
        "   elif event == cv2.EVENT_LBUTTONUP:\n",
        "    is_drawing = False"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "SImgEFuM5o-2",
        "outputId": "e3215e1d-edf3-4317-fae6-1b1681b79421"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "unindent does not match any outer indentation level (<tokenize>, line 18)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<tokenize>\"\u001b[0;36m, line \u001b[0;32m18\u001b[0m\n\u001b[0;31m    elif event == cv2.EVENT_LBUTTONUP:\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def mouseBrush():\n",
        "  global mode\n",
        "  img = np.zeros((576,1024,3),np.unit8)\n",
        "  cv2.nameWindow('drawing pad')\n",
        "  cv2.setMouseCallback('drawing pad',onMouse,img)\n",
        "\n",
        "  while True:\n",
        "    cv2.imshow('drawing pad',img)\n",
        "    k = cv2.waitKey(1)&0xFF\n",
        "    if k == 27:\n",
        "      break\n",
        "\n",
        "    if k == ord('m'):\n",
        "      mode = not mode\n",
        "\n",
        "  cv2.desrtoyAllWindows()\n",
        "\n",
        "mouseBrush()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "id": "ZLHRhn4r7_Bb",
        "outputId": "bf1a543e-be27-4aa7-9846-3f3465cdd3f6"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'np' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-1936064935.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     16\u001b[0m   \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdesrtoyAllWindows\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m \u001b[0mmouseBrush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/tmp/ipython-input-1936064935.py\u001b[0m in \u001b[0;36mmouseBrush\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmouseBrush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0;32mglobal\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m   \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m576\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1024\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munit8\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m   \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnameWindow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'drawing pad'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0mcv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetMouseCallback\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'drawing pad'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0monMouse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'np' is not defined"
          ]
        }
      ]
    }
  ]
}
